{"version":3,"sources":["Components/Employee.js","Services/logService.js","Services/authService.js","Services/employeeService.js","Components/Nav.js","Components/Home.js","Components/Login.js","Components/Signup.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["Meta","Card","Employee","employee","handleLog","onClick","bind","_id","hoverable","className","cover","alt","name","src","profilePicture","title","description","position","base_url","window","location","hostname","writeLog","log","axios","post","catch","err","console","response","data","msg","signup","user","history","then","res","localStorage","setItem","token","JSON","stringify","userId","logName","message","success","push","error","login","Nav","showDrawer","setState","visible","onClose","state","placement","this","props","type","to","closable","handleLogOut","Component","Header","Layout","Footer","Content","Home","removeItem","employeeId","list","getItem","get","headers","isLoggedIn","parse","map","index","key","id","FormItem","Form","Item","LoginForm","handleSubmit","e","preventDefault","form","validateFields","values","getFieldDecorator","onSubmit","rules","required","prefix","style","color","placeholder","valuePropName","initialValue","htmlType","Login","create","SignupForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","whitespace","validator","Signup","Router","exact","path","render","withRouter","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.290b1e1f.chunk.js","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\n\nconst {Meta} = Card;\n\nconst Employee = ({employee, handleLog}) => (\n  <div onClick={handleLog.bind(null, employee._id)}>\n    <Card\n      hoverable\n      className=\"employee-card\"\n      cover={<img alt={employee.name} src={employee.profilePicture === 'avatar' ? '/avatar.png' : employee.profilePicture} />}\n    >\n      <Meta\n        title={employee.name}\n        description={employee.position}\n      />\n\n    </Card>\n  </div>\n)\n\nexport default Employee;","import axios from 'axios';\n\nconst base_url = window.location.hostname === 'localhost' ? 'http://localhost:3500/api' : 'https://my-employees-2020.herokuapp.com/api';\n\n// Log services\nexport const writeLog = (log) => {\n  axios.post(`${base_url}/log`, log)\n    .catch(err=>{\n      console.log('Log Error =====>', err.response.data.msg);\n    });\n}","import axios from 'axios';\n\nimport {writeLog} from '../Services/logService'\nimport {message} from 'antd';\n\nconst base_url = window.location.hostname === 'localhost' ? 'http://localhost:3500/api' : 'https://my-employees-2020.herokuapp.com/api';\n\n// Auth services\n\nexport const signup = (user, history) => {\n  axios.post(`${base_url}/auth/signup`, user)\n    .then(res=>{\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n\n      // Writing log to database\n      let log = {userId: res.data.user._id, logName: 'User signup'}\n      writeLog(log);\n\n      message.success(res.data.message);\n      history.push('/');\n    })\n    .catch((err)=>{\n      message.error(err.response.data.msg);\n    });\n}\n\nexport const login = (user, history) => {\n  axios.post(`${base_url}/auth/login`, user)\n    .then(res => {\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n\n      // Writing log to database\n      let log = {userId: res.data.user._id, logName: 'User login'}\n      writeLog(log);\n\n      message.success(res.data.msg);\n      history.push('/');\n    })\n    .catch(err => {\n      message.error(err.response.data.msg);\n    });\n}\n\nexport const logout = history => {\n  localStorage.removeItem('token');\n  message.success('Logged out succesfully');\n  history.push('/login');\n}\n\nexport const isLoggedIn = history => {\n  const token = localStorage.getItem('token');\n  axios.get(`${base_url}/auth/loggedin`, {headers: {'x-access-token': token}})\n    .then(res => {\n      message.success(res.data.msg)\n    })\n    .catch(err => {\n      message.error(err.response.data.msg);\n      localStorage.removeItem('token');\n      history.push('/login')\n    });\n}","import axios from 'axios';\n\nconst base_url = window.location.hostname === 'localhost' ? 'http://localhost:3500/api' : 'https://my-employees-2020.herokuapp.com/api';\n\nexport const employeesList = () => {\n  return axios.get(`${base_url}/employee/list`)\n}","import React, {Component} from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport {Icon, Avatar, Drawer, Divider} from 'antd';\n\nclass Nav extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      visible: false,\n      placement: 'left'\n    }\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render(){\n    const {user} = this.props\n    return (\n      <nav className=\"nav\">\n        <div className=\"mouseHover\" >\n          <Icon onClick={this.showDrawer} type='menu' className=\"icon-nav\" />\n        </div>\n        <div>\n          <NavLink to='/' >\n            <span className='nav-logo'>\n              <i className=\"fas fa-search\"></i>\n            </span>\n          </NavLink>\n        </div>\n        <div>\n          {user ? <NavLink to='/profile'><Avatar src={user.profilePicture === 'avatar' ? '/avatar.png' : user.profilePicture} /></NavLink> : null}\n        </div>\n        <Drawer\n          placement={this.state.placement}\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}\n          className='drawer-wrapper'\n        >\n          <div><Link to='/' ><Icon type=\"home\" /> Home</Link></div>\n          <Divider />\n          <div><Link to='/chart' ><Icon type=\"file-search\" /> Log Char</Link></div>\n          <div><Link to='/' ><Icon type=\"file-done\" /> Employees</Link></div>\n          <Divider />\n          <div><Link to='/profile' ><Icon type=\"user\" /> Mi Profile</Link></div>\n          <div><Link to='/' ><Icon type=\"setting\" /> Settings</Link></div>\n          <Divider />\n          <div onClick={this.props.handleLogOut} ><Link to=''><Icon type=\"logout\" /> Log out</Link></div>\n        </Drawer>\n\n\n      </nav>\n    )\n  }\n\n}\n\nexport default Nav;","import React, {Component} from 'react';\nimport Employee from './Employee';\nimport {isLoggedIn, logout} from '../Services/authService';\nimport {employeesList} from '../Services/employeeService';\nimport {writeLog} from '../Services/logService';\nimport {Link} from 'react-router-dom';\n\nimport {Layout, Icon, BackTop, message} from 'antd';\nimport Nav from './Nav';\n\nconst {Header, Footer, Content} = Layout;\n\nclass Home extends Component {\n  constructor(){\n    super();\n    this.state = {\n      user: {},\n      list: []\n    }\n  }\n\n  handleLogOut = () => {\n    logout(this.props.history)\n  }\n\n  handleLog = (employeeId) => {\n    let {user} = this.state \n    let log = {\n      userId: user._id,\n      employeeId: employeeId,\n      logName: 'Employee consult'\n    }\n    writeLog(log);\n  }\n\n  componentDidMount(){\n    const token = localStorage.getItem('token');\n    token ? isLoggedIn(this.props.history) : this.props.history.push('/login');\n\n    const user = JSON.parse(localStorage.getItem('user'))\n    user ? this.setState({user}) : this.props.history.push('/login');\n\n    let {list} = this.state;\n\n    employeesList()\n      .then(res => {\n        list = res.data.list\n        this.setState({list})\n\n      })\n      .catch(err=>{\n        message.error(err.response.data.msg);\n      })\n\n  }\n\n  render(){\n    const {list, user} = this.state;\n    return (\n      <div>\n        <Layout>\n          <Header>\n            <Nav user={user} handleLogOut={this.handleLogOut}/>\n          </Header>\n          <Content>\n            <div className=\"cards-envelop\">\n              {list.map((employee, index)=><Employee key={index} handleLog={this.handleLog} employee={employee} />)}\n            </div>\n          </Content>\n          <Footer>\n            Footer\n          </Footer>\n        </Layout>\n        <div>\n          <BackTop id=\"back-top-custom\">\n            <div className=\"ant-back-top-inner\"><Icon type=\"to-top\" /></div>\n          </BackTop>\n        </div>\n      </div>\n    )\n  }\n}\n  \n\nexport default Home;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {login} from '../Services/authService'\n\nimport {Form, Icon, Input, Button, Checkbox} from 'antd';\n\nconst FormItem = Form.Item;\n\nclass LoginForm extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        login(values, this.props.history)\n      }\n    });\n  }\n  \n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <div className='login-envelop'>\n        <div>\n          <img src='/search.png' alt='logo'/>\n        </div>\n        <div>\n          <Form onSubmit={this.handleSubmit} className=\"form-envelop\">\n            <div>\n              <h1>Login</h1>\n            </div>\n            <FormItem>\n              {getFieldDecorator('email', {\n                rules: [{ required: true, message: 'Por favor ingresa tu email!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"user@compareit.com\"/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Ingresa tu contraseña!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type=\"password\"\n                  placeholder=\"Tu contraseña\"/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(\n                <Checkbox>Recuédame en este dispositivo</Checkbox>\n              )}\n              <Link className=\"login-form-forgot\" to='/forgot'>Olvidé mi contraseña</Link>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Iniciar sesión\n              </Button>\n              ¿No tienes una cuenta aún? <Link to='/signup'>Registrate ahora!</Link>\n            </FormItem>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Login = Form.create()(LoginForm);\n\n/*\n\nconst Login = () => {\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err){\n        login(values, this.props.history)\n      }\n    });\n  }\n\n  const {getFieldDecorator} = this.props.form;\n\n  return (\n    <div>\n      Login\n    </div>\n  )\n\n\n}\n\n*/\n\nexport default Login;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {signup} from '../Services/authService';\n\n\nimport {Form, Icon, Input, Button, Checkbox} from 'antd';\n\n\nconst FormItem = Form.Item;\n\nclass SignupForm extends Component {\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        signup(values, this.props.history)\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Password missmatch!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n\n  render(){\n    const {getFieldDecorator} = this.props.form;\n    return(\n      <div className='signup-envelop'>\n        <div>\n          <img src='/search.png' alt='logo'/>\n        </div>\n        <div>\n          <Form onSubmit={this.handleSubmit}>\n            <div>\n              <h1>Signup</h1>\n            </div>\n            <FormItem>\n              {getFieldDecorator('name', {\n                rules: [{ required: true, message: 'Please enter your name!', whitespace: true }],\n              })(\n                <Input\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='What is your name?'/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('email', {\n                rules: [{\n                  type: 'email', message: 'Please enter a valid email!',\n                }, {\n                  required: true, message: 'Emter your email!',\n                }],\n              })(\n                <Input\n                  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='name.surname@mycompany.com'/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('department', {\n                rules: [{\n                  required: true, message: 'Department is required!',\n                }],\n              })(\n                <Input\n                  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='Department'/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('position', {\n                rules: [{\n                  required: true, message: 'Position is required!',\n                }],\n              })(\n                <Input\n                  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='Position'/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [{\n                  required: true, message: 'Please enter your password!',\n                },{\n                  validator: this.validateToNextPassword,\n                }],\n              })(\n                <Input\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type=\"password\"\n                  placeholder=\"Your password\"/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('confirmPassword', {\n                rules: [{\n                  required: true, message: 'Please confirm your password!',\n                },{\n                  validator: this.compareToFirstPassword,\n                }],\n              })(\n                <Input\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type=\"password\"\n                  placeholder=\"Confirm your password\"/>\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('agreement', {\n                valuePropName: 'checked',\n              })(\n                <Checkbox>He leido el <Link to='/agreement'>acuerdo</Link></Checkbox>\n                )}\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  Registrar\n                </Button>\n                Ya tienes una cuenta? <Link to='/login' >Inicia sesión</Link>\n            </FormItem>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst Signup = Form.create()(SignupForm);\nexport default Signup;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './Components/Home';\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\n\n\nconst Router = () => (\n  <Switch>\n    <Route exact path='/' render={(props) => (\n      <Home\n        {...props}\n      />)}\n    />\n    <Route exact path='/signup' render={(props) => (\n      <Signup\n        {...props} \n      />)}\n    />\n    <Route exact path='/login' render={(props) => (\n      <Login\n        {...props} \n      />)}\n    />\n  </Switch>\n);\n\nexport default Router;","import React from 'react';\nimport Router from './Router';\nimport {withRouter} from 'react-router-dom';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Router\n    />\n  </div>\n);\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}